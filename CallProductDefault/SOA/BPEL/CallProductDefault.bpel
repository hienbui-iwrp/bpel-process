<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Wed Apr 12 03:32:04 ICT 2023
  Author:  iwRp
  Type: BPEL 2.0 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="CallProductDefault"
               targetNamespace="http://xmlns.oracle.com/bpel_process/CallProductDefault/CallProductDefault"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/bpel_process/CallProductDefault/CallProductDefault"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:ui="http://xmlns.oracle.com/soa/designer"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/http/bpel-process/CallProductDefault/getProductDefault"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/http/bpel-process/CallProductDefault/getEventByGoods"
         xmlns:ns3="http://xmlns.oracle.com/bpel_process/CallProductDefault/getProductDefault"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ess="http://xmlns.oracle.com/scheduler" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns4="http://xmlns.oracle.com/bpel_process/CallProductDefault/getEventByGoods">

    <import ui:processWSDL="true" namespace="http://xmlns.oracle.com/bpel_process/CallProductDefault/CallProductDefault" location="../WSDLs/CallProductDefault.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="client" partnerLinkType="client:CallProductDefault" myRole="CallProductDefaultProvider"/>
    <partnerLink name="getProductDefault" partnerLinkType="ns1:getProductDefault_plt"
                 partnerRole="getProductDefault_role"/>
    <partnerLink name="getEventByGoods" partnerLinkType="ns2:getEventByGoods_plt" partnerRole="getEventByGoods_role"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:input"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:output"/>
    <variable name="getProductDefault_InputVariable" messageType="ns1:Body_msg_in"/>
    <variable name="getProductDefault_OutputVariable" messageType="ns1:Response_msg_out"/>
    <variable name="getEventByGoods_InputVariable" messageType="ns2:Body_msg_in"/>
    <variable name="getEventByGoods_OutputVariable" messageType="ns2:Response_msg_out"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="Sequence2">
        <assign name="assignError">
          <copy>
            <from>500</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/client:StatusCode</to>
          </copy>
          <copy>
            <from>"Server Error"</from>
            <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload/client:Message</to>
          </copy>
        </assign>
        <reply name="replyError" partnerLink="client" variable="outputVariable" portType="client:CallProductDefault"
               operation="process"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in CallProductDefault.wsdl) -->
    <receive name="receiveInput" partnerLink="client" portType="client:CallProductDefault" operation="process" variable="inputVariable" createInstance="yes"/>
    <assign name="setup">
      <copy>
        <from>$inputVariable.payload/client:PageSize</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$getProductDefault_InputVariable.Body/ns3:PageSize</to>
      </copy>
      <copy>
        <from>$inputVariable.payload/client:PageNumber</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$getProductDefault_InputVariable.Body/ns3:PageNumber</to>
      </copy>
    </assign>
    <invoke name="invoke_GetProductDefault" bpelx:invokeAsDetail="no" partnerLink="getProductDefault"
            portType="ns1:getProductDefault_ptt" operation="getProductDefault"
            inputVariable="getProductDefault_InputVariable" outputVariable="getProductDefault_OutputVariable"/>
    <forEach parallel="no" counterName="index" name="ForEachProduct">
      <startCounterValue>1</startCounterValue>
      <finalCounterValue>count($getProductDefault_OutputVariable.Response/Data)</finalCounterValue>
      <scope name="Scope1">
        <sequence name="Sequence1">
          <assign name="setupEvent">
            <copy>
              <from>$getProductDefault_OutputVariable.Response/Data[$index]/GoodsId</from>
              <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$getEventByGoods_InputVariable.Body/ns4:GoodsId</to>
            </copy>
          </assign>
          <invoke name="invoke_GetEventByGoods" bpelx:invokeAsDetail="no" partnerLink="getEventByGoods"
                  portType="ns2:getEventByGoods_ptt" operation="getEventByGoods"
                  inputVariable="getEventByGoods_InputVariable" outputVariable="getEventByGoods_OutputVariable"/>
          <if name="checkEvent">
            <condition>$getEventByGoods_OutputVariable.Response/Data</condition>
            <assign name="assignNewPrice">
              <copy>
                <from>$getProductDefault_OutputVariable.Response/Data[$index]/UnitPrice*(1-$getEventByGoods_OutputVariable.Response/Data/Discount)</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$getProductDefault_OutputVariable.Response/Data[$index]/Price</to>
              </copy>
              <copy>
                <from>$getEventByGoods_OutputVariable.Response/Data/Discount</from>
                <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$getProductDefault_OutputVariable.Response/Data[$index]/Discount</to>
              </copy>
            </assign>
            <else>
              <sequence>
                <assign name="assignOldPrice">
                  <copy>
                    <from>$getProductDefault_OutputVariable.Response/Data[$index]/UnitPrice</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$getProductDefault_OutputVariable.Response/Data[$index]/Price</to>
                  </copy>
                  <copy>
                    <from>0</from>
                    <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$getProductDefault_OutputVariable.Response/Data[$index]/Discount</to>
                  </copy>
                </assign>
              </sequence>
            </else>
          </if>
        </sequence>
      </scope>
    </forEach>
    <assign name="setupOutput">
      <copy>
        <from>$getProductDefault_OutputVariable.Response</from>
        <to expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">$outputVariable.payload</to>
      </copy>
    </assign>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="client" portType="client:CallProductDefault" operation="process" variable="outputVariable"/>
  </sequence>
</process>